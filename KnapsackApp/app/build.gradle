apply plugin: 'com.android.application'


def getVersionCode = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : -1
    println "VersionCode is set to $code"
    return code
}

def getVersionName = { ->
    def name = project.hasProperty('versionName') ? versionName : ""
    println "VersionName is set to $name"
    return name
}

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {

        applicationId "org.quuux.knapsack"
        minSdkVersion 15
        targetSdkVersion 27

        versionCode getVersionCode()
        versionName getVersionName()
    }
    signingConfigs {
        release {
            storeFile file('release.keystore')
            storePassword "xxx"
            keyAlias "quuux"
            keyPassword "xxx"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:27.0.1'
    compile 'com.android.support:support-v4:27.0.1'
    compile 'com.android.support:design:27.0.1'
    compile 'com.android.support:cardview-v7:27.0.1'
    compile 'com.android.support:recyclerview-v7:27.0.1'
    compile 'com.android.support:palette-v7:27.0.1'

    compile 'com.google.android.gms:play-services-auth:11.6.0'
    compile 'com.google.android.gms:play-services-gcm:11.6.0'
    compile 'com.google.android.gms:play-services-analytics:11.6.0'

    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.9.1'
    compile 'com.squareup:otto:1.3.8'

    compile 'jp.wasabeef:recyclerview-animators:1.1.2@aar'
    compile 'org.quuux.feller:feller:0.1'
    compile 'org.quuux.sack:sack:0.2.1'
}

task askForPasswords << {
    def password = new String(System.console().readPassword("\n\npassword: "))
    android.signingConfigs.release.storePassword = password
    android.signingConfigs.release.keyPassword = password
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "askForPasswords"
    }
}

repositories {
    google()
}